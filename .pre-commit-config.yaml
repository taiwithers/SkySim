fail_fast : true
exclude: .gitignore
default_stages: ["pre-commit", "pre-merge-commit", "pre-push"]

default_language_version:
  python: python3.12 # minimum as in pyproject.toml

all_stages: &all_stages ["manual", "pre-commit", "pre-merge-commit", "pre-push"]

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
    -   id: check-added-large-files
    -   id: check-case-conflict
    -   id: check-executables-have-shebangs
    -   id: check-json
    -   id: check-merge-conflict
    -   id: check-toml
    -   id: check-yaml
    -   id: end-of-file-fixer
    -   id: mixed-line-ending
    -   id: pretty-format-json
        exclude: .ipynb
    -   id: trailing-whitespace

  # validate pyproject.toml
  - repo: https://github.com/abravalheri/validate-pyproject
    rev: 'v0.24'
    hooks:
      - id: validate-pyproject

  # black
  - repo: https://github.com/psf/black-pre-commit-mirror
    rev: 25.1.0
    hooks:
      - id: black

  # isort
  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort

  # poetry
  - repo: https://github.com/python-poetry/poetry
    rev: '2.1.1'
    hooks:
      - id: poetry-check
        stages: ["pre-push"]
      - id: poetry-lock
        stages: ["pre-push"]

  - repo: https://github.com/python-poetry/poetry-plugin-export
    rev: '1.9.0'
    hooks:
      - id: poetry-export
        stages: ["pre-push"]
        args: [
          "--format=requirements.txt",
          "--output=docs/source/requirements.txt",
          "--with=docs"]

  # numpy documentation style
  - repo: https://github.com/numpy/numpydoc
    rev: 'v1.8.0'
    hooks:
      - id: numpydoc-validation
        exclude: "__init__"

  - repo: local
    hooks:
      # manual (just validate) only
      - id: pylint-manual
        name: pylint [manual]
        entry: pylint
        language: system
        stages: ["manual"]
        types: ["python"]
        args: [ "--score=false",]

      # git action only
      - id: pylint-full
        name: pylint [full]
        entry: pylint
        language: system
        types: ["python"]
        args: [ "--score=false","--enable=redefined-builtin", "--enable=unused-import"]

      # push only
      - id: build-docs
        name: build docs
        entry: sphinx-build -M html docs/source docs/build --write-all --fail-on-warning
        language: system
        pass_filenames: false
        stages: ["pre-push"]

      - id: pytest-full
        name: pytest [full]
        entry: pytest
        language: system
        pass_filenames: false
        require_serial: true
        types: ["python"]
        exclude: "conf.py"
        stages: ["pre-push"]

      # all actions
      - id: mypy
        name: mypy
        entry: "dmypy run -- --package skysim"
        language: system
        pass_filenames: false
        require_serial: true
        types: ["python"]
        stages: *all_stages
        exclude: "conf.py"

      - id: nix-fmt
        name: nix-fmt
        entry: "nix fmt"
        language: system
        pass_filenames: false
        stages: *all_stages

      - id: pytest-testmon
        name: pytest [testmon]
        entry: pytest
        language: system
        pass_filenames: false
        require_serial: true
        types: ["python"]
        stages: ["manual", "pre-commit"]
        exclude: "conf.py"
        args: ["--testmon"]
